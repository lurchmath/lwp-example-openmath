{"version":3,"sources":["lwp-example-openmath.litcoffee"],"names":["indexOf","item","i","l","this","length","setAppName","addHelpMenuSourceCodeLink","window","helpAboutText","groupTypes","name","text","tooltip","imageHTML","openImageHTML","closeImageHTML","contentsChanged","XMLGroupChanged","deleted","XMLGroupDeleted","tagContents","group","getTagExternalName","get","tagMenuItems","XMLMenuItems","contextMenuItems","setTagData","CD","externalName","topLevel","defaultChild","includeText","allowedChildren","CDName","CDURL","CDBase","CDReviewDate","CDDate","CDStatus","CDUses","CDVersion","CDRevision","CDDefinition","Description","documentation","belongsIn","belongsAfter","unique","CDComment","contentCheck","OM","variable","contentAsText","trim","OMNode","test","notOkay","okay","word","words","split","results","len","join","date","match","month","exec","parseInt","ref","valids","call","getTagData","Name","Role","Example","MathematicalProperty","OMOBJ","rawXML","alterXML","XML","getGroupTag","parent","replace"],"mappings":"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","file":"lwp-example-openmath.js","sourcesContent":["\n# OpenMath Content Dictionary Example Application, Lurch Web Platform\n\n## Overview\n\nTo know what's going on here, you should first have read the documenation\nfor the other example applications\n([one](https://github.com/lurchmath/lwp-example-simple),\n[two](https://github.com/lurchmath/lwp-example-complex), and\n[three](https://github.com/lurchmath/lwp-example-math)) built on the\n[Lurch Web Platform (LWP)](https://github.com/lurchmath/lurch).\n\nThis example uses the [XML Groups module from the\nLWP](https://github.com/lurchmath/lurch/blob/master/source/auxiliary/xml-groups.litcoffee),\nwhich makes it easy to create applications whose groups are to be\ninterpreted as a hierarchy that can be converted into an XML document.  As\nyou will see in this demo app, it is also possible to define rules regarding\nthe structure of the hierarchy, enforce those rules, and provide help\ndocumentation to the user.\n\n[See a live version of this application online here.](https://lurchmath.github.io/lwp-example-openmath/)\n\n    setAppName 'OM-CD-Writer'\n    addHelpMenuSourceCodeLink \\\n        'lwp-example-openmath/blob/master/lwp-example-openmath.litcoffee'\n    window.helpAboutText =\n        '<p>See the fully documented <a target=\"top\"\n        href=\"https://github.com/lurchmath/lwp-example-openmath/blob/master/lwp-example-openmath.litcoffee\"\n        >source code for this demo app</a>.</p>'\n\n## Define one group type\n\nFor information on what this code does, see the simple example linked to\nabove.\n\n    window.groupTypes = [\n\nBasic appearance attributes for the group:\n\n        name : 'tag'\n        text : 'Content Dictionary Tag'\n        tooltip : 'Tag the selection'\n        imageHTML : '<font color=\"#999999\">{}</font>'\n        openImageHTML : '<font color=\"#999999\">{</font>'\n        closeImageHTML : '<font color=\"#999999\">}</font>'\n\nInstall [the event handlers provided by the XML Groups\nmodule](https://github.com/lurchmath/lurch/blob/master/source/auxiliary/xml-groups.litcoffee#provide-generic-event-handlers).\nThey prevent us from having to write most of the event handler code that we\nhad to write in the other demo apps, linked to above. The fact that they are\none-liners here shows some of the power of the [XML Groups\nmodule](https://github.com/lurchmath/lurch/blob/master/source/auxiliary/xml-groups.litcoffee).\n\n        contentsChanged : window.XMLGroupChanged\n        deleted : window.XMLGroupDeleted\n\nThe tag name for a group is what shows up in its bubble tag.  This function,\ntoo, is handled by a function provided by the XML Groups module,\n`getTagExternalName`.\n\n        tagContents : ( group ) ->\n            window.getTagExternalName group.get 'tagName'\n\nA group's tag menu and its context menu will be the same.  They are both\ngenerated by the `XMLMenuItems` function defined in [the XML Groups\nmodule](https://github.com/lurchmath/lurch/blob/master/source/auxiliary/xml-groups.litcoffee).\n\n        tagMenuItems : ( group ) -> window.XMLMenuItems group\n        contextMenuItems : ( group ) -> window.XMLMenuItems group\n    ]\n\nSo we get the entire application definition for free from the XML Groups\nmodule, as long as we provide it with the data it needs about the hierarchy\nof groups we want users to be able to manipulate in our app.  The following\nsection does so.\n\n## Define the XML tags for this application\n\nWe call one function, `setTagData`, with a large object as the only\nparameter.  In fact, that one (enormous) function call takes up the entirety\nof the rest of this file.  The object passed to that function has as its\nkeys the names of the different types of XML tags permitted in our app, and\nvalues that are objects defining how those tags behave in the app.\n\nTo understand the attributes of those value objects, read the [full\ndocumentation about\nthem](https://github.com/lurchmath/lurch/blob/master/source/auxiliary/xml-groups.litcoffee#tag-data)\nin the XML Groups module.  I do not document them here.\n\nThe particular use to which I put them conforms (mostly) to [the OpenMath\nSpecification version\n2.0](http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf).  Much of\nthe help documentation included below is quoted directly from that document,\nwith slight rewordings to suit this particular application.\n\n    window.setTagData\n        CD :\n            externalName : 'Content Dictionary'\n            topLevel : yes\n            defaultChild : 'Description'\n            includeText : 'CDComment'\n            allowedChildren :\n                CDName : [ 1, 1 ]\n                CDURL : [ 0, 1 ]\n                CDBase : [ 0, 1 ]\n                CDReviewDate : [ 0, 1 ]\n                CDDate : [ 1, 1 ]\n                CDStatus : [ 1, 1 ]\n                CDUses : [ 0, 1 ]\n                CDVersion : [ 1, 1 ]\n                CDRevision : [ 1, 1 ]\n                CDDefinition : [ 0, 9999999999 ]\n        Description :\n            documentation : '<p>The text occurring in the Description\n                element is used to give a description of the enclosing\n                element, which could be a symbol or the entire Content\n                Dictionary.  The content of this element can be any XML\n                text.</p>\n                <p>Within the whole Content Dictionary, this element is\n                optional, but should come before any other elements of the\n                Content Dictionary.  There can be at most one description\n                for a Content Dictionary.</p>\n                <p>Within a Content Dictionary Definition, this element is\n                required, and follows the Name and optional Role.  There\n                must be exactly one description for a Content\n                Dictionary Definition.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD', 'CDDefinition', 'Name', 'Role' ]\n            belongsAfter : [ null, 'Name', 'Role' ]\n            unique : yes\n        CDComment :\n            externalName : 'Content Dictionary Comment'\n            documentation : '<p>This tag will not actually be used in\n                authoring, but will be automatically wrapped around any\n                top-level text in the document when XML is generated.</p>'\n        CDName :\n            externalName : 'Content Dictionary Name'\n            documentation : '<p>The name of the Content Dictionary.  This\n                will be the \"cd\" field of all symbols from this Content\n                Dictionary.  For example, standard addition comes from the\n                Content Dictionary \"arith1\".  It must comply to the rules\n                in Section 2.3 of <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a>.</p>\n                <p>This element is required in a Content Dictionary, and\n                must either be the first element or immediately after the\n                optional description.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'Description', null ]\n            unique : yes\n            contentCheck : ( group ) ->\n                tryToMakeVariable = OM.variable group.contentAsText().trim()\n                if tryToMakeVariable not instanceof OMNode\n                    [ 'Content Dictionary Names must be valid identifiers.\n                        The content of this element is not.' ]\n                else\n                    [ ]\n        CDURL :\n            externalName : 'Content Dictionary URL'\n            documentation : '<p>The text occurring in the CDURL element\n                should be a valid URL where the source file for the Content\n                Dictionary encoding can be found (if it exists). The\n                filename should conform to <a href=\"http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=17505\">ISO 9660</a>.</p>\n                <p>This element is optional, but if present, there must be\n                only one and it must immediately follow the Content\n                Dictionary Name element.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'CDName' ]\n            unique : yes\n            contentCheck : ( group ) ->\n                re = /^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/i\n                if not re.test group.contentAsText().trim()\n                    [ 'Content Dictionary URL elements must contain valid\n                        URLs.  This one does not.' ]\n                else\n                    [ ]\n        CDBase :\n            externalName : 'Content Dictionary Base'\n            documentation : '<p>A Content Dictionary Base, when combined\n                with the Content Dictionary Name, forms a unique identifier\n                for the Content Dictionary.  It may or may not refer to an\n                actual location from which it can be retrieved.</p>\n                <p>This element is optional, but if present, there must be\n                only one and it must immediately follow the Content\n                Dictionary Name and optional URL.</p>\n                <p>For example, standard addition comes from the\n                content dictionary \"arith1\" with base\n                \"http://www.openmath.org/cd\".  It is also the case that\n                you can find that Content Dictionary file online at\n                <a href=\"http://www.openmath.org/cd/arith1.xhtml\">http://www.openmath.org/cd/arith1.xhtml</a>,\n                but it is not required that the base be a URL.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'Name', 'CDURL' ]\n            unique : yes\n        CDUses :\n            externalName : 'Content Dictionaries Used'\n            documentation : '<p>The content of this element should be a\n                series of Content Dictionary Name elements, each naming a\n                Content Dictionary used in the Example and Mathematical\n                Properties of the current Content Dictionary.  This element\n                is optional and deprecated since the information can easily\n                be extracted automatically.</p>\n                <p>If present, there can be only one of these elements, and\n                it must immediately follow the Content Dictionary\n                Status.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'CDStatus' ]\n            unique : yes\n            contentCheck : ( group ) ->\n                okay = ( text ) -> OM.variable( text ) instanceof OMNode\n                words = group.contentAsText().trim().split /\\s+/\n                notOkay = ( word for word in words when okay word )\n                if notOkay.length > 0\n                    [ \"Content Dictionary Uses must be lists of valid\n                        identifiers.  The following words are not valid\n                        identifiers:  #{notOkay.join ', '}\" ]\n                else\n                    [ ]\n        CDReviewDate :\n            externalName : 'Content Dictionary Review Date'\n            documentation : '<p>A review date is a date until which the\n                content dictionary is guaranteed to remain unchanged.  Dates\n                should be written in the ISO-compliant format YYYY-MM-DD,\n                e.g. 1966-02-03.</p>\n                <p>This element is optional.  If present, there can be only\n                one, and it must follow the Content Dictionary Name and\n                optional URL and Base URL.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'Name', 'CDURL', 'CDBase' ]\n            unique : yes\n            contentCheck : ( group ) ->\n                match = /^([0-9]{4})-([0-9]{2})-([0-9]{2})$/.exec \\\n                    group.contentAsText().trim()\n                if not match\n                    [ 'This element must contain a valid date of the form\n                        YYYY-MM-DD.' ]\n                else\n                    month = parseInt match[2]\n                    date = parseInt match[3]\n                    if month < 1 or month > 12\n                        [ \"This element must contain a valid date in the\n                            form YYYY-MM-DD.  The month #{month} is\n                            invalid.\" ]\n                    else if date < 1 or date > 31\n                        [ \"This element must contain a valid date in the\n                            form YYYY-MM-DD.  The date #{date} is\n                            invalid.\" ]\n                    else\n                        [ ]\n        CDStatus :\n            externalName : 'Content Dictionary Status'\n            documentation : '<p>The status of the Content Dictionary, which\n                must be one of the following four words.</p>\n                <ul>\n                <li><b>official:</b> approved by the OpenMath Society\n                according to the procedure outlined in Section 4.5 of\n                <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></li>\n                <li><b>experimental:</b> under development and thus liable\n                to change</li>\n                <li><b>private:</b> used by a private group of OpenMath\n                users</li>\n                <li><b>obsolete:</b> an obsolete Content Dictionary kept\n                only for archival purposes</li>\n                </ul>\n                <p>This element is required in a Content Dictionary, and\n                there must be only one, and it must follow the Content\n                Dictionary Date.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'CDDate' ]\n            unique : yes\n            contentCheck : ( group ) ->\n                valids =\n                    [ 'official', 'experimental', 'private', 'obsolete' ]\n                if group.contentAsText().trim() in valids\n                    [ ]\n                else\n                    [ \"A Content Dictionary Status must be one of the\n                        following choices: #{valids.join ', '}\" ]\n        CDDate :\n            externalName : 'Content Dictionary Date'\n            documentation : '<p>A revision date, the date of the last change\n                to the Content Dictionary. Dates should be written in the\n                ISO-compliant format YYYY-MM-DD, e.g. 1966-02-03.</p>\n                <p>This element is required in any Content Dictionary.\n                There must be exactly one, and it must immediately follow\n                the Content Dictionary Name and optional URL, Base, and\n                Review Date.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'Name', 'CDURL', 'CDBase', 'CDReviewDate' ]\n            unique : yes\n            contentCheck : ( group ) ->\n                window.getTagData( 'CDReviewDate', 'contentCheck' ) group\n        CDVersion :\n            externalName : 'Content Dictionary Version'\n            documentation : '<p>A version number must consist of two parts,\n                a major version and a revision, both of which should\n                be non-negative integers.  In Content Dictionaries that do\n                not have status experimental, the version number should\n                be a positive integer.</p>\n                <p>This field stores the major version.  Use a Content\n                Dictionary Revision to store the other half of the version\n                number.</p>\n                <p>This element is required in any Content Dictionary.\n                There must be exactly one, and it must immediately follow\n                the Content Dictionary Status and optional Uses element.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'CDStatus', 'CDUses' ]\n            unique : yes\n            contentCheck : ( group ) ->\n                if /[0-9]+/.test group.contentAsText().trim()\n                    [ ]\n                else\n                    [ \"A Content Dictionary Version must be a nonnegative\n                        integer.\" ]\n        CDRevision :\n            externalName : 'Content Dictionary Revision'\n            documentation : '<p>A version number must consist of two parts,\n                a major version and a revision, both of which should\n                be non-negative integers.  In Content Dictionaries that do\n                not have status experimental, the version number should\n                be a positive integer.</p>\n                <p>This field stores the revision.  Use a Content\n                Dictionary Version to store the other half of the version\n                number.</p>\n                <p>This element is required in any Content Dictionary.\n                There must be exactly one, and it must immediately follow\n                the Content Dictionary Version.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            belongsAfter : [ 'CDVersion' ]\n            unique : yes\n            contentCheck : ( group ) ->\n                if /[0-9]+/.test group.contentAsText().trim()\n                    [ ]\n                else\n                    [ \"A Content Dictionary Revision must be a nonnegative\n                        integer.\" ]\n        CDDefinition :\n            externalName : 'Symbol Definition'\n            defaultChild : 'Description'\n            documentation : '<p>This element contains the definition of an\n                individual symbol in the Content Dictionary.  It should\n                contain all the following.</p>\n                <ul>\n                <li>Name (required)</li>\n                <li>Description (required)</li>\n                <li>Role (optional)</li>\n                <li>Zero or more Mathematical Properties</li>\n                <li>Zero or more Examples</li>\n                </ul>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CD' ]\n            includeText : 'MathematicalProperty'\n            allowedChildren :\n                Name : [ 1, 1 ]\n                Role : [ 0, 1 ]\n                Description : [ 1, 1 ]\n                Example : [ 0, 9999999999 ]\n                MathematicalProperty : [ 0, 9999999999 ]\n        Name :\n            externalName : 'Symbol Name'\n            documentation : '<p>The name of a symbol.  For example, standard\n                addition comes from the Content Dictionary \"arith1\" and has\n                the symbol name \"plus\".  Names must comply to the rules\n                in Section 2.3 of <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a>.</p>\n                <p>A Content Dictionary Definition requires a Name element,\n                and it must be the first element.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CDDefinition' ]\n            belongsAfter : [ null ]\n            unique : yes\n            contentCheck : ( group ) ->\n                tryToMakeVariable = OM.variable group.contentAsText().trim()\n                if tryToMakeVariable not instanceof OMNode\n                    [ 'Symbol Names must be valid identifiers.\n                        The content of this element is not.' ]\n                else\n                    [ ]\n        Role :\n            externalName : 'Symbol Role'\n            documentation : '<p>The role of a symbol, which indicates how\n                the symbol can be used in OpenMath expressions.  It must be\n                one of the following.</p>\n                <ul>\n                <li>binder</li>\n                <li>attribution</li>\n                <li>semantic-attribution</li>\n                <li>error</li>\n                <li>application</li>\n                <li>constant</li>\n                </ul>\n                <p>A Content Dictionary Definition does not require a Role\n                element, but if one appears, it must immediately follow the\n                Name element.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CDDefinition' ]\n            belongsAfter : [ 'Name' ]\n            unique : yes\n            contentCheck : ( group ) ->\n                valids =\n                    [ 'binder', 'attribution', 'semantic-attribution',\n                      'error', 'application', 'constant' ]\n                if group.contentAsText().trim() in valids\n                    [ ]\n                else\n                    [ \"A Symbol Role must be one of the following choices:\n                        #{valids.join ', '}\" ]\n        Example :\n            documentation : '<p>An example should show how the symbol is\n                used, to illustrate the symbol to the reader of the Content\n                Dictionary.  There is no set format, other than that you may\n                intersperse text and OpenMath Object as you see fit, and\n                must not use any other content inside an Example.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CDDefinition' ]\n            allowedChildren :\n                OMOBJ : [ 0, 9999999999 ]\n        OMOBJ :\n            externalName : 'OpenMath Object'\n            documentation : '<p>An OpenMath Object, expressed in the XML\n                encoding defined in <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a>.</p>\n                <p>OpenMath Objects can be placed inside Examples to show\n                how the symbol that\\'s being defined might be used.  They\n                can also be placed inside Mathematical Properties, to make\n                them formal.</p>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CDDefinition', 'MathematicalProperty' ]\n            rawXML : yes\n            alterXML : ( XML, group ) ->\n                if window.getGroupTag( group.parent ) is 'CDDefinition'\n                    XML = \"<FMP>#{XML}</FMP>\"\n                XML\n        MathematicalProperty :\n            externalName : 'Mathematical Property'\n            defaultChild : 'OMOBJ'\n            documentation : '<p>A Mathematical Property can come in one of\n                two forms.</p>\n                <ul>\n                <li><b>Formal:</b> In this form, the content of the\n                Mathematical Property should be just a single OpenMath\n                Object.  Thus OpenMath is the language used to formalize\n                Mathematical Properties in Content Dictionaries.</li>\n                <li><b>Commented:</b> In this form, the content of the\n                Mathematical Property can be any text, and can express a\n                Mathematical Property in whatever informal language or\n                description seems appropriate.</li>\n                </ul>\n                <p>Source: <a href=\"http://www.openmath.org/standard/om20-2004-06-30/omstd20.pdf\">the OpenMath Standard version 2.0</a></p>'\n            belongsIn : [ 'CDDefinition' ]\n            alterXML : ( XML, group ) ->\n                if XML.indexOf( '<OMOBJ>' ) > -1\n                    XML.replace /MathematicalProperty>/g, 'FMP>'\n                else\n                    XML.replace /MathematicalProperty>/g, 'CMP>'\n            allowedChildren :\n                OMOBJ : [ 0, 1 ]\n"]}